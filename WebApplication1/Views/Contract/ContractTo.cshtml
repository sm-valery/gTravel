@functions{

    object getcontrolattr(bool isonlyview, string control)
    {
        object o;

        if (control == "Contract_territory_chosen")
        {
            if (isonlyview)
            {
                o = new
                {
                    @class = "form-control chosen-select input-100p",
                    Multiple = "Multiple",
                    data_placeholder = "Выберите территорию...",
                    disabled = "disabled"
                };
            }
            else
            {
                o = new
                {
                    @class = "form-control chosen-select input-100p",
                    Multiple = "Multiple",
                    data_placeholder = "Выберите территорию..."
                };
            }


            return o;
        }

        if (isonlyview)
            o = new { @class = "form-control input-sm input-value", disabled = "disabled" };
        else
            o = new { @class = "form-control input-sm input-value" };

        return o;
    }

}

@helper HelperAgents(bool isic)
{

    if (isic)
    {
        <fieldset>
            <legend>Агенты</legend>

            <a id="agents_add" href="#">
                <span class="glyphicon glyphicon-plus-sign"></span>
                <span style="font-weight:normal;">
                    &nbsp;Добавить
                </span>
            </a>
            <div id="agentcontent">
                <img id="agent_wait" src="~/Content/loading_white_small.gif"
                     style="position:absolute; z-index:1000;display:none;" />

                @Html.Action("_AgentList", new { contractid = Model.ContractId })
            </div>
        </fieldset>
    }
}


@helper HelperRiskFactors(int numrow, int riskcount, Guid riskid, Guid contractid, bool viewonly = false)
{
    if (numrow == 0)
    {

        <td rowspan="@riskcount">
            @*Скидки по договору*@
            <img id="bonus_wait" src="~/Content/loading_white_small.gif"
                 style="position:absolute; z-index:1000;display:none;" />
            @*<span class="label label-default">Доп. условия</span>*@

            @Html.Action("_bonus_btn", new { seriaid = Model.seriaid, riskid = riskid, contractid = contractid, viewonly = viewonly })


        </td>

    }

}
@helper HelperAddition()
{
    if (Model.ContractConditions.Any())
    {
        <p></p>
        <fieldset>
            <legend>Доп. параметры</legend>
            <div class="well well-sm">
                @{
        int idx = 0;

        foreach (var item in Model.ContractConditions)
        {
            <p>
                @helpers.BuildCond(idx, item)
            </p>
            idx++;

        }
                }
            </div>
        </fieldset>
    }
}

@model gTravel.Models.Contract
@{
    ViewBag.Title = "Договор";

    var viewonly = Model.ContractStatu.Status.Readonly == 1;

    bool isAgentIc = (bool)ViewBag.isic;
}


@using (Html.BeginForm("ContractTo", null, FormMethod.Post, new { @class = "form-inline", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div id="errModal" class="modal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title">Ошибки</h4>
                </div>
                <div class="modal-body">
                    @Html.ValidationSummary()
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Закрыть</button>
                </div>
            </div>
        </div>
    </div>


    @Html.HiddenFor(m => Model.ContractId)
    @Html.HiddenFor(m => Model.ContractStatusId)
    @Html.HiddenFor(m => Model.seriaid)
    @Html.HiddenFor(m => Model.UserId)

    var cterr = Model.Contract_territory.FirstOrDefault();
    Guid ContractTerritoryId = (cterr == null) ? Guid.Empty : cterr.ContractTerritoryId;

    //foreach (var terr in Model.Contract_territory)
    //{
    //    @Html.Hidden("Contract_territory[0].ContractId", Model.ContractId)
    //    @Html.Hidden("Contract_territory[0].ContractTerritoryId", terr.ContractTerritoryId)
    //    @Html.Hidden("Contract_territory[0].TerritoryId", terr.TerritoryId)
    //}



    <div class="panel panel-default">
        <div class="panel-heading" style="color:#b94a48;">
            @Model.seria.Name
            &nbsp;&nbsp;@helpers.ContractStatus(Model.ContractStatu.Status)
            <a href="@Url.Action("index")" class="close" title="Закрыть"><span aria-hidden="true">&times;</span></a>
        </div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-2"><label>Дата выдачи полиса:</label></div>
                <div class="col-md-10">
                    @Html.HiddenFor(model => Model.date_out)
                    @Html.TextBoxFor(m => Model.date_out, "{0:d}", new { @class = "form-control input-sm date3 date_period input-value", disabled = "disabled" })

                    <span class="alert">
                        Валюта:
                        @Html.DropDownListFor(model => Model.currencyid, (SelectList)ViewBag.currency, getcontrolattr(viewonly, "currencyid"))
                    </span>


                </div>
            </div>
            <div class="row">
                <div class="col-md-2">
                    <label><b>Номер:</b></label>
                </div>
                <div class="col-md-10">
                    @Html.HiddenFor(model => Model.contractnumber)

                    <div class="form-group">
                        <div class="input-group">
                            <div class="input-group-addon">@Model.seria.Code.Trim()</div>
                            <input type="text" readonly class="form-control input-sm input-value" placeholder="Amount" value="@Model.contractnumber">
                            @*@Html.TextBox("seria_contractnumber", Model.contractnumber, new { @class = "form-control input-sm input-value", disabled = "disabled" })*@
                        </div>
                    </div>


                    @*@Html.TextBoxFor(model => Model.contractnumber, new { @class = "form-control input-sm input-value", disabled = "disabled" })*@

                </div>
            </div>
            @*<div class="row">
                    <div class="col-md-2"><label>Валюта:</label></div>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => Model.currencyid, (SelectList)ViewBag.currency, new { @class = "form-control input-sm input-value" })
                    </div>
                </div>*@
            <p></p>
            <div class="row">
                <div class="col-md-2"><label>Период страхования:</label> </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => Model.date_begin, "{0:d}", new { @class = "form-control input-sm date3 date_period input-value" })
                    <span>/</span>
                    @Html.TextBoxFor(m => Model.date_end, "{0:d}", new { @class = "form-control input-sm date3 date_period input-value" })
   
                    <span class="label label-primary">
                        <span id="period_day_count">
                            @Html.DisplayFor(m => Model.date_diff)

                        </span>
                        дня(ей)
                    </span>
  
                </div>
            </div>
            <div class="row">
                <div class="col-md-2"><label><b>Срок поездки:</b></label> </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(m => Model.tripduration, new { @class = "form-control input-sm input-value" }) 

                    @Html.DropDownListFor(m => Model.period_multi_type, (SelectList)ViewBag.PeriodMultiType, new { @class = "form-control input-sm input-value" })
                    <label> дней</label>
                </div>
            </div>
            <p></p>
            <div class="row">
                <div class="col-md-2"><label><b>Территория:</b></label> </div>
                <div class="col-md-10">

                    @Html.DropDownList("Contract_territory_chosen", (MultiSelectList)ViewBag.TerritoryId, getcontrolattr(viewonly, "Contract_territory_chosen"))

                    <span id="Contract_territory_content">
                        @Html.Partial("_addContractTerritory", Model.Contract_territory)
                    </span>

                    @*@Html.Action("build_contract_territory", new { ContractTerritoryId = ContractTerritoryId, contractid = Model.ContractId })*@

                </div>
            </div>

            @*Доп параметры*@
            @HelperAddition()
            @*//страхователь*@


            <p>&nbsp;</p>

            <fieldset>
                @{
    bool subj_f = Model.Subject.Type.Trim() == "fiz";
                }
                <legend>
                    Страхователь


                </legend>

                <div style="margin-bottom:5px; margin-top:-5px;">
                    <label class="radio">
                        <input type="radio" name="Subject.Type"
                               @if (subj_f) {  @: checked
}
                               value="fiz" />
                        физ-лицо
                    </label>
                    <label class="radio">
                        <input type="radio" name="Subject.Type"
                               @if (!subj_f) {  @: checked
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          }
                               value="jur">
                        юр-лицо
                    </label>
                </div>
                <div class="alert alert-success">


                    @Html.HiddenFor(model => Model.Holder_SubjectId)
                    @Html.HiddenFor(model => Model.Subject.SubjectId)
                    <span class="form-field">
                        <label id="subj_lab_name">@( (subj_f) ? "Имя" : "Наименование"):</label>
                        @Html.TextBoxFor(model => Model.Subject.Name1, new { @class = "form-control input-sm input-value", name = "SubjectF.Name" })
                    </span>
                    <span class="form-field">
                        <label>Дата рождения:</label>
                        @Html.TextBoxFor(m => Model.Subject.DateOfBirth, new { @class = "form-control input-sm date3 date_period input-value" })
                    </span>
                    <span class="form-field">
                        <label id="subj_lab_id">@( (subj_f) ? "Паспорт" : "ИНН"):</label>
                        @Html.TextBoxFor(m => Model.Subject.Pasport, new { @class = "form-control input-sm input-value" })
                    </span>

                    <span class="form-field">
                        <label >Адрес/тел:</label>
                        @Html.TextAreaFor(m => Model.Subject.Address, new { @class = "form-control input-sm input-value" })
                    </span>
                </div>
            </fieldset>


            <fieldset>
                <legend>
                    Список застрахованных

                </legend>
                <div id="div-summary-insd" class="alert alert-warning hidden">
                    Всего застрахованно человек: <label>10</label>
                </div>
                <div id="div-togle-insd" class="alert alert-warning ">
                    <table id="insdtable" class="table-condensed scrolling-table">
                        <thead>
                            <tr>
                                <th>ФИО по паспорту</th>
                                <th>Дата рождения</th>
                                <th>Паспорт</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
int indx = 0;

foreach (var item in Model.Subjects.OrderBy(x => x.num))
{
                            @*@Html.Partial("_addInsuredRow", item, new ViewDataDictionary { { "indx", indx } });*@

                            @Html.Action("_edtInsuredRow", new { SubjectId = item.SubjectId, indx = indx, fieldlist = "DateOfBirth, Pasport" })

    indx++;
}

                            }
                        </tbody>
                    </table>
                    @if (!viewonly)
                    {
                    <img id="insured_add_wait" src="~/Content/loading_white_small.gif"
                         style="position:absolute; z-index:1000;display:none;" />

                    <span class="glyphicon glyphicon-plus-sign"></span>
                    <a id="insured_add" href="#">

                        <span style="font-weight:normal;">
                            &nbsp;Добавить застрахованного
                        </span>
                    </a>

                    <span class="glyphicon glyphicon-plus-sign"></span>
                    <a id="insurer_add" href="#">
                        <span style="font-weight:normal;">
                            &nbsp;Добавить страхователя
                        </span>
                    </a>

                    }
                </div>

            </fieldset>
            <fieldset>
                <legend>Риски</legend>
                @{
                    var risk_num = 0;
                    decimal contract_fee = 0;
                    decimal contract_fee_rur = 0;
                    decimal contract_prem = 0;
                    decimal contract_prem_rur = 0;

                    var riskseria = (List<gTravel.Models.RiskSeria>)ViewBag.RiskSeria;
                }
                <table class="table table-condensed table-bordered">
                    @foreach (var risk in Model.ContractRisks.OrderBy(o => o.sort))
                    {
                        var crisk_settings = riskseria.SingleOrDefault(x => x.RiskId == risk.RiskId);

                        <tr>
                            <td class="active">
                                @(risk.isMandatory ? Html.Hidden(string.Format("ContractRisks[{0}].ischecked", risk_num), risk.ischecked) : Html.CheckBox(string.Format("ContractRisks[{0}].ischecked", risk_num), risk.ischecked))
                                @risk.Risk.Name

                                @Html.Hidden(string.Format("ContractRisks[{0}].ContractRiskId", risk_num), risk.ContractRiskId)
                                @Html.Hidden(string.Format("ContractRisks[{0}].ContractId", risk_num), risk.ContractId)
                                @Html.Hidden(string.Format("ContractRisks[{0}].RiskId", risk_num), risk.RiskId)
                                @Html.Hidden(string.Format("ContractRisks[{0}].sort", risk_num), risk.sort)
                                @Html.Hidden(string.Format("ContractRisks[{0}].isMandatory", risk_num), risk.isMandatory)



                            </td>
                            <td>
                                @{

                        //выбор программы
                        Html.RenderAction("_RiskProgram", new { riskid = risk.RiskId, seriaid = Model.seriaid, idx = risk_num, progid = risk.RiskProgramId });

                                }
                                <div id="div-ins-sum" style="white-space:nowrap;">
                                    <label class="small risk-label1">Страховая сумма</label>
                        

                                    <input class="form-control input-sm input-value"
                                           @{
                                               if((bool)crisk_settings.InsSumReadOnly)
                                               {
                                                   @:disabled
                                               }
                                           }
                                           id="@string.Format("ContractRisks_{0}__InsSum", risk_num)"
                                           name="@string.Format("ContractRisks[{0}].InsSum",risk_num)"
                                           placeholder="Страх. сумма" type="text" value="@risk.InsSum"
                                           data-toggle="popover"
                                           data-content="Если не заполнено, используется рекомендуемая страховая сумма"
                                           data-placement="top"
                                           title="">
                                    
                                    @*@Html.TextBox(string.Format("ContractRisks[{0}].InsSum", risk_num), risk.InsSum,
               new { htmlAttributes = new { @class = "form-control input-sm input-value" ,
                   data-toggle="tooltip",
                   placeholder = "Страх. сумма"},
              }
                                    )*@
                                    
                                  
                                 </div>
                      
                                
                                @{
                        //франшиза
                        Html.RenderAction("_RiskFranchise", new {seriaid = Model.seriaid, riskid = risk.RiskId, FranshPerc = risk.FranshPerc, idx = risk_num });
                                }



                            </td>
                            <td>
                                <div style="white-space:nowrap;">
                                    <label class="small risk-label1">Базовый тариф</label>
                                    @Html.TextBox(string.Format("ContractRisks[{0}].AgentTarif", risk_num), risk.AgentTarif, new { @class = "form-control input-sm input-value", style = "width: 100px; !important" })
                                </div>
                                <div style="white-space:nowrap;">
                                    <label class="small risk-label1">Тариф СК</label>
                                    @Html.TextBox("sss", risk.BaseTarif, new { @class = "form-control input-sm input-value", @readonly = true, style = "width: 100px; !important" })
                               
                                </div>



                            </td>
               
                               
                                @HelperRiskFactors(risk_num, Model.ContractRisks.Count, (Guid)risk.RiskId, Model.ContractId, viewonly)
         
                            <td>
             
                                <span class="label label-primary">Премия</span>

                                @Html.TextBox(string.Format("ContractRisks[{0}].InsPrem", risk_num), risk.InsPrem, new { @class = "form-control input-sm input-value", @readonly = true })
  
                                @{
                            contract_fee += (decimal)(risk.InsFee ?? 0);
                            contract_fee_rur += (decimal)(risk.InsFeeRur ?? 0);
                            contract_prem += (decimal)(risk.InsPrem ?? 0);
                            contract_prem_rur += (decimal)(risk.InsPremRur ?? 0);
                                }
                                <span class="label label-default tooltip-m" data-toggle="tooltip" data-placement="top"
                                      title="@string.Format("базовый тариф: {0}, дней {1}, кол-во застрахованных {2}", risk.BaseTarif, Model.date_diff,Model.Subjects.Count())">?</span>


                            </td>
                        </tr>

                        risk_num++;
                    }
                </table>



                
                    <div class="blockquote-warning" id="block-total">
                        <h4>Итого</h4>

                        <div class="row">
                            <div class="col-xs-3">
                                Премия, @Model.Currency.code
                            </div>
                            <div class="col-lg-3 input-value">@contract_prem </div>
                            <div class="col-xs-3">
                                Премия СК, @Model.Currency.code:
                            </div>
                            <div class="col-lg-3 input-value">@contract_fee</div>
                        </div>
                        <div class="row">
                            <div class="col-xs-3">
                                Премия, руб:
                            </div>
                            <div class="col-lg-3 input-value">@contract_prem_rur </div>
                            <div class="col-xs-3">
                                Премия СК, руб:
                            </div>
                            <div class="col-lg-3 input-value">@contract_fee_rur</div>
                        </div>
                        <div class="row">
                            <div class="col-xs-3">
                                Курс на дату выдачи:
                                <span class="input-value">@{
    Html.RenderAction("_print_currate", new { cdate = Model.date_out, curid = Model.currencyid});
                                        }</span>
                            </div>
                            
                        </div>
                        @*<div class="row">
                            <div class="col-xs-3">
                                Вознаграждение СК по договору:
                            </div>
                            <div class="col-lg-3 input-value">@contract_fee</div>
                        </div>
                        <div class="row">
                            <div class="col-xs-3">
                                Вознаграждение СК по договору, руб:
                            </div>
                            <div class="col-lg-3 input-value">@contract_fee_rur</div>
                            <div>
                                Курс на дату выдачи:
                            </div>
                        </div>*@



                        @*@if (User.IsInRole("Admin"))
                {

                <span>Вознаграждение по договору: <span class="input-value">@contract_fee</span></span>
                }*@
                    </div>
</fieldset>

    
           @HelperAgents(isAgentIc)


     <p>&nbsp;</p>
            @*Кнопки*@
        <div class="panel-footer">
            @if (!viewonly)
            {
                <button name="caction" value="save" class="btn btn-primary">Сохранить&Закрыть</button>
                <button name="caction" value="recalc" class="btn btn-info">Расчитать</button>
                if (contract_prem > 0)
                {
                    <button name="caction" value="confirm" class="btn btn-success">Утвердить</button>
                }
            }
            @if (Model.ContractStatu.Status.Code == "confirmed")
            {
                @Html.ActionLink("Электронный полис", Model.seria.PrintFunction, new { contractid = Model.ContractId, blanktype = 1 }, new { @class = "btn btn-info" })
                        @Html.ActionLink("Бланк", Model.seria.PrintFunction, new { contractid = Model.ContractId, blanktype = 0 }, new { @class = "btn btn-info" })
            }
            @Html.ActionLink("В список", "Index", null, new { @class = "btn btn-default" })
            @if (User.IsInRole("Admin"))
            {
                @:&nbsp;&nbsp;
                @Html.ActionLink("Аннулировать", "contract_annul", new { contractid = Model.ContractId }, new { onclick = "return confirm('Аннулировать договор?');" })

            }
        </div>
    </div>
        </div>
}

<script type="text/javascript">

    function bind_bonus() {
        $('.alert-dismissible').on('close.bs.alert', function () {

            var xpos = $(this).offset();

            var contractfactor_id = $(this).attr('id').toString().replace('alert_', '');
            var riskobj = $(this).parent().parent();
            //var risk_id = riskobj.attr('id').toString().replace('risk_bonus_', '');

            $.ajax({
                url: '@Url.Action("_dellbonusRow", "Contract")',
                type: "GET",
                data: { contractfactorid: contractfactor_id, xv: "@viewonly" },
                beforeSend: function () {
                    $("#waitimg").offset(xpos);
                    $("#waitimg").show();
                },
                success: function (data) {

                    riskobj.children(".risk_bonus_content").html(data);
                    bind_bonus();
                }
            }).done(function () {
                $("#waitimg").hide();
            });

        });
    }

    function add_insrow(fam, dayofbirth, pasport) {
        var indx = $("#insdtable tbody tr").length;

        $.ajax({
            url: '@Url.Action("_addInsuredRow", "Contract")',
            type: "GET",
            data: { contractid: '@Model.ContractId', indx: indx, fieldlist: 'DateOfBirth,Pasport', ins_name: fam, dayob: dayofbirth, pasport: pasport },
            error: function (request, status, error) {
                alert(error);
            },
            beforeSend: function () {

                $("#insured_add_wait").show();
            },
            success: function (data) {

                $('#insdtable>tbody:last').append(data);

                $(".date3").datepicker({
                    format: "dd.mm.yyyy",
                    language: "ru",
                    autoclose: true
                });

                $("#insdtable >tbody>tr:last > td:last a").bind("click", function (e) {
                    //удаление
                    ins_delete($(this).parent().parent().index(), $(this).attr("id").substr(4))
                    e.preventDefault();
                })


            }
        }).done(function () {
            $("#insured_add_wait").hide();
        });
    }


    $(function () {

        $("#div-program").children("select").change(function (e) {
            $.ajax({
                url: '@Url.Action("_program_changed", "Contract")',
                type: 'GET',
                data: { programid: $(this).val() },
                success: function(data)
                {
                    $("#ContractRisks_0__InsSum").val(data);
                }
            });
        })


        $("#div-ins-sum").children("input").on("focus", function () {
            //if (this.value == "")
           // {
                $(this).popover();
            //}

        });
        $("#div-ins-sum").children("input").on("focusout", function () {
            $(this).popover("hide");
        });

        $("#Contract_territory_chosen").chosen().change(function () {
        
            var territorylist = "";

            if ($(this).val() != null)
                territorylist = $(this).val().toString();

            $.ajax({
                url: '@Url.Action("_addContractTerritory", "Contract")',
                type: 'GET',
                data: { contractid: '@Model.ContractId', territorylist: territorylist },
                beforeSend: function () {
                    //$("#bonus_wait").show();
                },
                success: function (data) {

                    $("#Contract_territory_content").html(data);

                    // riskobj.children(".risk_bonus_content").html(data);
                    // bind_bonus();
                }
            }).done(function () {
                // $("#bonus_wait").hide();
            });


        });

        //добавить страхователя
        $("#insurer_add").click(function (e) {

            var fam = $("#Subject_Name1").val();
            var dob = $("#Subject_DateOfBirth").val();
            var pas = $("#Subject_Pasport").val();

            add_insrow(fam, dob, pas);
            e.preventDefault();
        });


        //добавить застрахованного
        $("#insured_add").click(function (e) {

            add_insrow();
            e.preventDefault();
        });

        @* ////изменение типа страхователя*@
        $("input[name='Subject.Type']").change(function () {

            var stype = $(this).val();

            if (stype == "fiz") {
                $("#subj_lab_name").text("Имя:");
                $("#subj_dfb").show();
                $("#Subject_DateOfBirth").parent().show();
                $("#subj_lab_id").text("Паспорт:");
            }
            else {
                $("#subj_lab_name").text("Наименование:");
                $("#subj_dfb").hide();
                $("#Subject_DateOfBirth").parent().hide();
                $("#subj_lab_id").text("ИНН:");
            }
        });


        @*Скидки*@
        $(".frm-discounts a").click(function (e) {

            var factor_id = $(this).attr("id");

            var riskobj = $(this).parent().parent().parent().parent();
            var discounts = riskobj.parent();

            var risk_id = riskobj.attr("id").toString().replace('risk_bonus_', '');

            $.ajax({
                url: '@Url.Action("_addbonusRow", "Contract")',
                type: 'GET',
                data: { factorid: factor_id, contractid: '@Model.ContractId', xv: '@viewonly' },
                beforeSend: function () {
                    $("#bonus_wait").show();
                },
                success: function (data) {

                    discounts.children(".risk_bonus_content").html(data);
                    bind_bonus();
                }
            }).done(function () {
                $("#bonus_wait").hide();
            });

            e.preventDefault();
        });@*скидки*@


        @*//агенты*@
        $("#agents_add").click(function (e) {

            $.ajax({
                url: '@Url.Action("_addAgentRow", "Contract")',
                type: 'POST',
                data: { contractid: '@Model.ContractId' },
                beforeSend: function () {
                    $("#agent_wait").show();
                },
                success: function (data) {

                    $(data).insertAfter("#agent_wait");

                    $(".agent-dell").on("click", function (e) {

                        var id = $(this).attr("data-id");
                        var agentnum = $(this).attr("data-num").toString();

                        agent_delete(id, agentnum);

                        e.stopImmediatePropagation();
                        return false;
                    });

                    //$("#agentcontent").insertAfter( .html(data);
                }
            }).done(function () {
                $("#agent_wait").hide();
            });

            e.preventDefault();
        });


        bind_bonus();


    })
</script>
