@functions{
    string getstatusclass(string statuscode)
    {
        string ret = "status-default"; //"label label-default";

        if (statuscode == "confirmed")
            //return "label label-primary";
            return "status-" + statuscode;

        if (statuscode == "bordero")
            //return "label label-success";
            return "status-" + statuscode;

        if (statuscode == "annul")
            return "status-" + statuscode;


        return ret;
    }
}
@using PagedList.Mvc;
@using PagedList;
@model PagedList.PagedList<gTravel.Models.v_contract>

@{
    ViewBag.Title = "Список договоров";
}

<h3>@ViewBag.Title </h3>
@if (!string.IsNullOrEmpty((string)ViewBag.filtr))
{
    <div class="alert alert-info">
        Установлен фильтр: @ViewBag.filtr
        <br />
        <a href=@Url.Action("index")> <span class="glyphicon glyphicon-remove-circle"></span> сбросить</a>

    </div>
}

<p>
    @Html.Action("_tools_add_contract_btn")

</p>
<div class="row">
    <div class="col-md-11"></div>
    <div class="col-md-1">
        <abbr title="Количество записей">
            <span class="badge" style="margin-bottom:3px;">
              
                @Model.TotalItemCount
            </span>
        </abbr>
    </div>
</div>

<table class="table table-hover">
    <tr class="active">
        <th>
            Номер
        </th>
        <th>
            Дата выдачи
        </th>
        <th>
            Период
        </th>
        <th>
            Страхователь
        </th>
        @*<th>Территория</th>
            <th>
                <span class="tooltip-m" data-toggle="tooltip" data-placement="top" title="Количество застрахованных">Кол-во...</span>

            </th>*@
        <th>Премия</th>
        @*<th>
                Премия, руб
            </th>*@
        <th>Статус</th>
        <th>Пользователь</th>
        <th></th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>

                @item.serianame.Trim()
                -
                @item.contractnumber
            </td>
            <td>
                @Html.DisplayFor(m => item.date_out, "_edate")
            </td>
            <td>
                @Html.DisplayFor(m => item.date_begin, "_edate") - @Html.DisplayFor(m => item.date_end, "_edate")
                @*@item.date_begin.Value.ToShortDateString() - @item.date_end.Value.ToShortDateString()*@
                (@item.date_diff)
            </td>
            <td>
                @Html.DisplayFor(m=>item.holder_name)
                @if(item.subject_count>0)
                {
                    @:(@item.subject_count)
                }


            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.terr_name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.subject_count)
                </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.InsPrem)
                @Html.DisplayFor(modelItem => item.curr_code)
            </td>
            @*<td>
                    @Html.DisplayFor(modelItem => item.InsPremRur)
                </td>*@
            <td>
                <label class="@getstatusclass(item.status_code)">
                    @Html.DisplayFor(m => item.status_name)
                </label>
            </td>
            <td>
                @Html.DisplayFor(m => item.UserName)
            </td>
            <td>
                @Html.ActionLink("Открыть", "Contract_edit", new { contractid = item.ContractId }, new { @class = "btn btn-default btn-sm" })
                @if(item.status_code=="confirmed")
                {
                    <div class="btn-group">
                        <button class="btn btn-default btn-sm dropdown-toggle" type="button" data-toggle="dropdown" aria-expanded="false">
                            Печать<span class="caret"></span>
                        </button>

                        <ul class="dropdown-menu" role="menu">
                            <li>
                                @Html.ActionLink("На бланке", item.PrintFunction, new { contractid = item.ContractId, blanktype = 0})


                            </li>
                            <li>
                                @Html.ActionLink("Электронный полис", item.PrintFunction, new { contractid = item.ContractId, blanktype = 1 })
                            </li>
                        </ul>
                    </div>
                    
                    
                    @*@Html.ActionLink("Печать", item.PrintFunction, new { contractid = item.ContractId }, new { @class = "btn btn-default btn-sm" })*@
                }
                @Html.ActionLink("История", "history", new { id = item.ContractId }, new { @class = "btn btn-default btn-sm" })
            </td>
        </tr>
    }
</table>
@*@Html.PagedListPager(Model, page => Url.Action("Index", new { page = page }))*@
