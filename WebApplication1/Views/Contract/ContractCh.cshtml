@helper BuildCond(int idx, gTravel.Models.ContractCondition cond)
{

    @*@Html.CheckBox("cond_" + code.Trim(), istrue)*@
    @Html.Hidden("ContractConditions[" + idx.ToString() + "].ContractCondId", cond.ContractCondId)
    @Html.Hidden("ContractConditions[" + idx.ToString() + "].ConditionId", cond.ConditionId.Value)
    @Html.Hidden("ContractConditions[" + idx.ToString() + "].Contractid", cond.Contractid)
    @Html.Hidden("ContractConditions[" + idx.ToString() + "].num", cond.num)

    switch (cond.Condition.Type)
    {
        case "L":
            <div class="checkbox">
                <label>
                    @Html.CheckBox("ContractConditions[" + idx.ToString() + "].Val_l", cond.Val_l.Value)
                    @cond.Condition.Name
                </label>
            </div>
            break;
        case "C":
        <div class="row">
            <div class="col-md-2">
                <label>@cond.Condition.Name:</label>
            </div>
            <div class="col-md-10">
                @Html.TextBox("ContractConditions[" + idx.ToString() + "].Val_c", cond.Val_c, new { @class = "form-control input-sm input-value" })

            </div>
        </div>
            break;
        case "D":
        <div class="row">
            <div class="col-md-2">
                <label>@cond.Condition.Name:</label>
            </div>
            <div class="col-md-10">
                @Html.TextBox("ContractConditions[" + idx.ToString() + "].Val_d", cond.Val_d, new { @class = "form-control input-sm input-value date3" })

            </div>
        </div>
            break;

        case "S":
        <div class="row">
            <div class="col-md-2">
                <label>@cond.Condition.Name:</label>
            </div>
            <div class="col-md-10">

                @Html.TextArea("ContractConditions[" + idx.ToString() + "].Val_c", cond.Val_c, new { @class = "form-control input-sm input-value", style="width:300px;" })


            </div>
        </div>
            break;
    }


}
@model gTravel.Models.Contract
@{
    ViewBag.Title = "Contract";
}
@using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-inline", role = "form" }))
{

    @Html.HiddenFor(m => Model.ContractId)
    @Html.HiddenFor(m => Model.StatusId)
    @Html.HiddenFor(m => Model.seriaid)

    <div class="panel panel-default">
        <div class="panel-heading" style="color:darkslategray;">Стандартный полис страхования медицина/невыезд</div>
        <div class="panel-body">
            <div class="row">
                <div class="col-md-2">
                    <label><b>Номер:</b></label>
                </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => Model.contractnumber, new { @class = "form-control input-sm input-value", type = "tel", autofocus = true })
                </div>
            </div>
            <p></p>
            <div class="row">
                <div class="col-md-2"><label>Валюта:</label></div>
                <div class="col-md-10">
                    @Html.DropDownListFor(model => Model.currencyid, (SelectList)ViewBag.currency, new { @class = "form-control input-sm input-value" })
                </div>
            </div>
            <p></p>
            <div class="row">
                <div class="col-md-2"><label>Период страхования:</label> </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => Model.date_begin, "{0:d}", new { @class = "form-control input-sm date3 date_period input-value" })
                    <span>/</span>
                    @Html.TextBoxFor(m => Model.date_end, "{0:d}", new { @class = "form-control input-sm date3 date_period input-value" })
                    <span>
                        &nbsp;

                        <span id="period_day_count">
                            @Html.DisplayFor(m => Model.date_diff)
                        </span>
                        дня(ей)
                    </span>
                </div>
            </div>

            @*Доп параметры*@
            <p></p>
            <fieldset>
                <legend>Доп. параметры</legend>
                <div class="well well-sm">
                    @{
    int idx = 0;

    foreach (var item in Model.ContractConditions)
    {

        @BuildCond(idx, item)

        idx++;

    }
                    }
                </div>
            </fieldset>





            <fieldset>
                <legend>Территория</legend>
                <div class="well well-sm">
                    <div class="row">
                        <div class="col-md-2"><label>Выберите территорию:</label> </div>
                        <div class="col-md-10">

                            @if (Model.Contract_territory.Count() > 0)
                            {

                                foreach (var t in Model.Contract_territory)
                                {

                                    @Html.Action("build_contract_territory", new { ContractTerritoryId = t.ContractTerritoryId })

                                }
                            }
                            else
                            {
                                @Html.Action("build_contract_territory", new { contractid = Model.ContractId })
                            }


                            @*@Html.DropDownList("Contract_territory[0].TerritoryId", (SelectList)ViewBag.territory, new { @class = "form-control input-sm input-value" })*@

                        </div>
                    </div>
                </div>
            </fieldset>


            <fieldset>
                <legend>Риски</legend>
           

                    @{
                        int risk_num = 0;
                    }
                    @foreach (var risk in Model.ContractRisks)
                    {


                        <table class="table table-condensed table-bordered">
                            <tr>
                                <td>Риск</td>
                                <th>Страховая сумма</th>
                                <th>
                                    Базовый тариф
                                </th>
                                <th>Премия</th>
                            </tr>
                            <tr>
                                <td class="active">
                                    @risk.Risk.Name
                                    @*<div class="label label-default"> @risk.Risk.Name</div>*@
                                </td>
                                <td>
                                    @Html.Hidden(string.Format("ContractRisks[{0}].ContractRiskId", risk_num), risk.ContractRiskId)
                                    @Html.Hidden(string.Format("ContractRisks[{0}].ContractId", risk_num), risk.ContractId)
                                    @Html.Hidden(string.Format("ContractRisks[{0}].RiskId", risk_num), risk.RiskId)

                                    @Html.TextBox(string.Format("ContractRisks[{0}].InsSum", risk_num), risk.InsSum, new { @class = "form-control input-sm input-value" })
                                </td>
                                <td></td>
                                <td>
                                    @Html.TextBox(string.Format("ContractRisks[{0}].InsPrem", risk_num), risk.InsPrem, new { @class = "form-control input-sm input-value" })
                                </td>
                            </tr>
                        </table>

                        risk_num++;
                    }


            </fieldset>


            <fieldset>
                <legend>Список застрахованных</legend>
                <div class="alert alert-warning">
                    <table id="insdtable" class="table table-condensed">

                        <tbody>
                            <tr>
                                <th>#</th>
                                <th>ФИО по паспорту</th>
                                <th>Пол</th>
                                <th>Дата рождения</th>
                                <th>Место рождения</th>
                                <th>Номер паспорта</th>
                                <th>Срок действия паспорта</th>
                            </tr>

                            @{
                            // int indx = 0;

                            foreach (var item in Model.Subjects.OrderBy(x => x.num))
                            {
                                @*@Html.Partial("_addInsuredRow", item, new ViewDataDictionary { { "indx", indx } });*@

                                @Html.Action("_edtInsuredRow", new { SubjectId = item.SubjectId })

                                // indx++;
                            }

                            }
                        </tbody>
                    </table>



                    <a id="insured_add" href="#"><span class="glyphicon glyphicon-plus-sign"></span><span style="font-weight:normal;">&nbsp;Добавить застрахованного</span> </a>
                </div>



            </fieldset>

        </div> @*panel body*@
        <div class="panel-footer">
            <button class="btn btn-primary">Сохранить</button>
        </div>
    </div>


}
<script type="text/javascript">
    $(function () {

        //добавить застрахованного
        $("#insured_add").click(function (e) {

            $.ajax({
                url: '@Url.Action("_addInsuredRow", "Contract", new { contractid = Model.ContractId })',
                type: "GET",
                error: function (request, status, error) {
                    alert(error);
                },
                success: function (data) {

                    $(data).insertAfter("#insdtable >tbody>tr:last");

                    $(".date3").datepicker({
                        format: "dd.mm.yyyy",
                        language: "ru",
                        autoclose: true
                    });
                }
            });

            e.preventDefault();
        });

        //изменение периода
        $(".date_period").change(function () {

            var d1 = $("#date_begin").val();
            var d2 = $("#date_end").val();



            $.ajax({
                url: '@Url.Action("get_strperiodday","Contract")',
                data: {
                    date_from: d1,
                    date_to: d2
                },
                error: function (request, status, error) {
                    alert(error);
                },
                success: function (data) {
                    $("#period_day_count").html(data);
                }
            });
        });
    })

</script>
