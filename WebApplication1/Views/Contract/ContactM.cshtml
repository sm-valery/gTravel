@helper droplist(string name, SelectList list, string selval)
{

    selval = (string.IsNullOrEmpty(selval)) ? Guid.Empty.ToString() : selval;

    <select name="@name" class="form-control input-sm input-value" data-val="true">
        @foreach (var item in list)
        {
            if (selval == item.Value)
            {
                <option value="@item.Value" selected="selected">@item.Text</option>
            }
            else
            {
                <option value="@item.Value">@item.Text</option>
            }

        }
    </select>

}


@functions{

    object getcontrolattr(string control)
    {
        object o;

        if (control == "Contract_territory_chosen")
        {
            o = new
            {
                @class = "form-control chosen-select input-100p",
                Multiple = "Multiple",
                data_placeholder = "Выберите территорию..."
            };


            return o;
        }

        o = new { @class = "form-control input-sm input-value" };

        return o;
    }

}

@model gTravel.Models.Contract

@{
    ViewBag.Title = "ContactM";
}

<style>
    body {
        font-size: small;
    }

    table {
        font-size: small;
    }
</style>

<div class="well well-sm">@Model.seria.Code . @Model.seria.Name</div>
@using (Html.BeginForm("ContractM", "Contract", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(m => Model.ContractId)
    @Html.HiddenFor(m => Model.ContractStatusId)
    @Html.HiddenFor(m => Model.seriaid)
    @Html.HiddenFor(m => Model.UserId)
    @Html.HiddenFor(m=> Model.Holder_SubjectId)
    
    <div class="row">
        <div class="col-md-2">
            Номер:
            @Html.TextBoxFor(m => Model.contractnumber, new { autofocus = true, @class = "form-control input-sm" })
        </div>
        <div class="col-md-2">

            Валюта:
            @Html.DropDownListFor(model => Model.currencyid, (SelectList)ViewBag.currency,
              new { @class = "form-control input-sm input-value" })

        </div>
        <div class="col-sm-2">
            Дата выдачи:
            @Html.TextBoxFor(m => Model.date_out, new { @class = "form-control input-sm short-date", placeholder = "ддмм" })
        </div>
    </div>
    <div class="row">
        <div class="col-sm-2">
            Период страхования c:
            @Html.TextBoxFor(m => Model.date_begin, new { @class = "form-control input-sm short-date", placeholder = "ддмм" })
        </div>
        <div class="col-sm-2">
            по:
            @Html.TextBoxFor(m => Model.date_end, new { @class = "form-control input-sm short-date", placeholder = "ддмм" })
        </div>
        <div class="col-sm-1">
            дней:
            @Html.TextBoxFor(m => Model.date_diff, new { @class = "form-control input-sm short-date" })
        </div>
        <div class="col-sm-1">
            срок:
            @Html.TextBoxFor(m => Model.tripduration, new { @class = "form-control input-sm" })
        </div>

    </div>

    <div class="row">
        <div class="col-sm-4">
            Территория:
            @Html.DropDownList("Contract_territory_chosen",
                (MultiSelectList)ViewBag.TerritoryId,
                getcontrolattr("Contract_territory_chosen"))
        </div>

        <div class="col-sm-3">
            Страхователь:
            <div class="input-group">


                @Html.TextBoxFor(model => Model.Subject.Name1, new { @class = "form-control" })
                <span class="input-group-btn">
                    <button id="add_isd" class="btn btn-default" type="button">в спис</button>
                </span>
            </div><!-- /input-group -->
        </div>
    </div>




    <div class="well well-sm">
        <table id="subjtable">

            <tr>
                <td>ФИО</td>
                <td>ДР</td>
                <td>Франш</td>
                <td>Пасп</td>

            </tr>
            @Html.Action("_ContractMNewAssured")

        </table>
    </div>

    <div class="row">
        <div class="col-lg-2">
            Страх. сумма
            @Html.TextBoxFor(model => Model.Subject.Name1, new { @class = "form-control input-sm" })
        </div>
        <div class="col-lg-2">
            Страх. премия
            @Html.TextBoxFor(model => Model.Subject.Name1, new { @class = "form-control input-sm" })
        </div>
    </div>


    <div class="row">
        <div class="col-lg-3">
            Агент 1
            @Html.DropDownList("agentlist", null, new { @class = "form-control input-sm chosen-select" })

        </div>
        <div class="col-lg-1">
            %
            @Html.TextBoxFor(model => Model.Subject.Name1, new { @class = "form-control input-sm" })
        </div>
        <div class="col-lg-3">
            Агент 2
            @Html.DropDownList("agentlist", null, new { @class = "form-control input-sm chosen-select" })
        </div>
        <div class="col-lg-1">
            %
            @Html.TextBoxFor(model => Model.Subject.Name1, new { @class = "form-control input-sm" })
        </div>
        <div class="col-lg-4">  </div>
    </div>

    <hr />
    <button class="btn btn-primary btn-sm">Сохранить</button>
    <button class="btn btn-default">По образцу</button>
}


<div class="alert alert-info">
    переход от поля к полю: <b>TAB</b>, открыть список значений, нажатия на кнопки: <b>SPACE</b>, добавить нового застрахованного: <b>ENTER</b> в последней колонке, сохранить полис из любого поля <b>ENTER</b>
</div>
<script type="text/javascript">
    function addnewassured(event) {
        if (event.which == 13) {

            var subj_count = $("#subjtable tr").length;
    
            $.ajax({
                url: '@Url.Action("_ContractMNewAssured")',
                data: {
                    idx: subj_count
                },
                error: function (request, status, error) {
                    alert(error);
                },
                success: function (data) {
                    $("table").append(data);

                    $("table tr:last input:first").focus();
                }
            });


            //  $("table").append("<tr><td>1</td><td>2</td><td>3</td><td>4</td></tr>");



            event.preventDefault();
        }
    }

    function prepdateyy(me) {

        if (me.value.length == 6) {
            var prepval = me.value.toString();
            var now = new Date();
            var yy = prepval.substring(4, 6);

            var nowyy = now.getFullYear().toString().substring(2, 4);

            if (yy < nowyy) {
                nowyy = "20" + yy;
            }
            else {
                nowyy = "19" + yy;
            }

            var newval = prepval.substring(0, 2) + '.' + prepval.substring(2, 4) + '.' + nowyy;

            me.value = newval;
        }

    }

    $(function () {

        $("#add_isd").click(function () {

            var newv = $("#Subject_Name1").val();

            $("table input:first").val(newv);
            $("table input:first").focus();
        });

        $(".short-date").change(function () {

            if ($(this).val().length == 4) {
                var prepval = $(this).val().toString();

                var now = new Date();
                var newval = prepval.substring(0, 2) + '.' + prepval.substring(2, 4) + '.' + now.getFullYear();

                $(this).val(newval);
            }
            if (this.id == 'date_begin' || this.id == 'date_end') {
                var d1 = $("#date_begin").val();
                var d2 = $("#date_end").val();



                $.ajax({
                    url: '@Url.Action("get_strperiodday","Contract")',
                    data: {
                        date_from: d1,
                        date_to: d2
                    },
                    error: function (request, status, error) {
                        alert(error);
                    },
                    success: function (data) {

                        $("#date_diff").val(data);
                    }
                });
            }

        });





        @*$(".grid-input").keypress(function (event) {

        })

        $("#grid-lastcol").keypress(function (event) {

            if (event.which == 13) {

                $.ajax({
                    url: '@Url.Action("_ContractMNewAssured")',

                    error: function (request, status, error) {
                        alert(error);
                    },
                    success: function (data) {

                        $("table").append(data);
                    }
                });


                  //  $("table").append("<tr><td>1</td><td>2</td><td>3</td><td>4</td></tr>");



                event.preventDefault();
            }
        });*@

    })
</script>
