//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace gTravel.ServiceTeamProfit {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GroupCheckResult", Namespace="http://schemas.datacontract.org/2004/07/TeamProfit")]
    [System.SerializableAttribute()]
    public partial class GroupCheckResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrentNumberPeopleGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreationInDBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberPeopleGroupField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrentNumberPeopleGroup {
            get {
                return this.CurrentNumberPeopleGroupField;
            }
            set {
                if ((this.CurrentNumberPeopleGroupField.Equals(value) != true)) {
                    this.CurrentNumberPeopleGroupField = value;
                    this.RaisePropertyChanged("CurrentNumberPeopleGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreationInDB {
            get {
                return this.DateCreationInDBField;
            }
            set {
                if ((this.DateCreationInDBField.Equals(value) != true)) {
                    this.DateCreationInDBField = value;
                    this.RaisePropertyChanged("DateCreationInDB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupNumber {
            get {
                return this.GroupNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNumberField, value) != true)) {
                    this.GroupNumberField = value;
                    this.RaisePropertyChanged("GroupNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValid {
            get {
                return this.IsValidField;
            }
            set {
                if ((this.IsValidField.Equals(value) != true)) {
                    this.IsValidField = value;
                    this.RaisePropertyChanged("IsValid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberPeopleGroup {
            get {
                return this.NumberPeopleGroupField;
            }
            set {
                if ((this.NumberPeopleGroupField.Equals(value) != true)) {
                    this.NumberPeopleGroupField = value;
                    this.RaisePropertyChanged("NumberPeopleGroup");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CoordinationAuthority", Namespace="http://schemas.datacontract.org/2004/07/TeamProfit")]
    [System.SerializableAttribute()]
    public partial class CoordinationAuthority : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameEnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameRuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullNameEn {
            get {
                return this.FullNameEnField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameEnField, value) != true)) {
                    this.FullNameEnField = value;
                    this.RaisePropertyChanged("FullNameEn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullNameRu {
            get {
                return this.FullNameRuField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameRuField, value) != true)) {
                    this.FullNameRuField = value;
                    this.RaisePropertyChanged("FullNameRu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CheckPoint", Namespace="http://schemas.datacontract.org/2004/07/TeamProfit")]
    [System.SerializableAttribute()]
    public partial class CheckPoint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameEnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameRuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullNameEn {
            get {
                return this.FullNameEnField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameEnField, value) != true)) {
                    this.FullNameEnField = value;
                    this.RaisePropertyChanged("FullNameEn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullNameRu {
            get {
                return this.FullNameRuField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameRuField, value) != true)) {
                    this.FullNameRuField = value;
                    this.RaisePropertyChanged("FullNameRu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TravelAgency", Namespace="http://schemas.datacontract.org/2004/07/TeamProfit")]
    [System.SerializableAttribute()]
    public partial class TravelAgency : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameCnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameEnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameRuField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReferenceNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyNumber {
            get {
                return this.CompanyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNumberField, value) != true)) {
                    this.CompanyNumberField = value;
                    this.RaisePropertyChanged("CompanyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullNameCn {
            get {
                return this.FullNameCnField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameCnField, value) != true)) {
                    this.FullNameCnField = value;
                    this.RaisePropertyChanged("FullNameCn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullNameEn {
            get {
                return this.FullNameEnField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameEnField, value) != true)) {
                    this.FullNameEnField = value;
                    this.RaisePropertyChanged("FullNameEn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullNameRu {
            get {
                return this.FullNameRuField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameRuField, value) != true)) {
                    this.FullNameRuField = value;
                    this.RaisePropertyChanged("FullNameRu");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceNumber {
            get {
                return this.ReferenceNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceNumberField, value) != true)) {
                    this.ReferenceNumberField = value;
                    this.RaisePropertyChanged("ReferenceNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Group", Namespace="http://schemas.datacontract.org/2004/07/TeamProfit")]
    [System.SerializableAttribute()]
    public partial class Group : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoordinationAuthorityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateArrivalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateCreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateDepartureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeparturePointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntryPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InsuranceUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameGroupLeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberDepartureFlightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberEntryFlightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberPeopleGroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private gTravel.ServiceTeamProfit.Person[] PersonsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PolicyPeriodFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PolicyPeriodTillField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceivingOperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SendingOperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransportTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string md5Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CoordinationAuthority {
            get {
                return this.CoordinationAuthorityField;
            }
            set {
                if ((object.ReferenceEquals(this.CoordinationAuthorityField, value) != true)) {
                    this.CoordinationAuthorityField = value;
                    this.RaisePropertyChanged("CoordinationAuthority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateArrival {
            get {
                return this.DateArrivalField;
            }
            set {
                if ((this.DateArrivalField.Equals(value) != true)) {
                    this.DateArrivalField = value;
                    this.RaisePropertyChanged("DateArrival");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateCreated {
            get {
                return this.DateCreatedField;
            }
            set {
                if ((this.DateCreatedField.Equals(value) != true)) {
                    this.DateCreatedField = value;
                    this.RaisePropertyChanged("DateCreated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateDeparture {
            get {
                return this.DateDepartureField;
            }
            set {
                if ((this.DateDepartureField.Equals(value) != true)) {
                    this.DateDepartureField = value;
                    this.RaisePropertyChanged("DateDeparture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeparturePoint {
            get {
                return this.DeparturePointField;
            }
            set {
                if ((object.ReferenceEquals(this.DeparturePointField, value) != true)) {
                    this.DeparturePointField = value;
                    this.RaisePropertyChanged("DeparturePoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntryPoint {
            get {
                return this.EntryPointField;
            }
            set {
                if ((object.ReferenceEquals(this.EntryPointField, value) != true)) {
                    this.EntryPointField = value;
                    this.RaisePropertyChanged("EntryPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupNumber {
            get {
                return this.GroupNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNumberField, value) != true)) {
                    this.GroupNumberField = value;
                    this.RaisePropertyChanged("GroupNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InsuranceUpdated {
            get {
                return this.InsuranceUpdatedField;
            }
            set {
                if ((this.InsuranceUpdatedField.Equals(value) != true)) {
                    this.InsuranceUpdatedField = value;
                    this.RaisePropertyChanged("InsuranceUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameGroupLeader {
            get {
                return this.NameGroupLeaderField;
            }
            set {
                if ((object.ReferenceEquals(this.NameGroupLeaderField, value) != true)) {
                    this.NameGroupLeaderField = value;
                    this.RaisePropertyChanged("NameGroupLeader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberDepartureFlight {
            get {
                return this.NumberDepartureFlightField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberDepartureFlightField, value) != true)) {
                    this.NumberDepartureFlightField = value;
                    this.RaisePropertyChanged("NumberDepartureFlight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberEntryFlight {
            get {
                return this.NumberEntryFlightField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberEntryFlightField, value) != true)) {
                    this.NumberEntryFlightField = value;
                    this.RaisePropertyChanged("NumberEntryFlight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberPeopleGroup {
            get {
                return this.NumberPeopleGroupField;
            }
            set {
                if ((this.NumberPeopleGroupField.Equals(value) != true)) {
                    this.NumberPeopleGroupField = value;
                    this.RaisePropertyChanged("NumberPeopleGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public gTravel.ServiceTeamProfit.Person[] Persons {
            get {
                return this.PersonsField;
            }
            set {
                if ((object.ReferenceEquals(this.PersonsField, value) != true)) {
                    this.PersonsField = value;
                    this.RaisePropertyChanged("Persons");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PolicyPeriodFrom {
            get {
                return this.PolicyPeriodFromField;
            }
            set {
                if ((this.PolicyPeriodFromField.Equals(value) != true)) {
                    this.PolicyPeriodFromField = value;
                    this.RaisePropertyChanged("PolicyPeriodFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PolicyPeriodTill {
            get {
                return this.PolicyPeriodTillField;
            }
            set {
                if ((this.PolicyPeriodTillField.Equals(value) != true)) {
                    this.PolicyPeriodTillField = value;
                    this.RaisePropertyChanged("PolicyPeriodTill");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceivingOperator {
            get {
                return this.ReceivingOperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivingOperatorField, value) != true)) {
                    this.ReceivingOperatorField = value;
                    this.RaisePropertyChanged("ReceivingOperator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SendingOperator {
            get {
                return this.SendingOperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.SendingOperatorField, value) != true)) {
                    this.SendingOperatorField = value;
                    this.RaisePropertyChanged("SendingOperator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransportType {
            get {
                return this.TransportTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransportTypeField, value) != true)) {
                    this.TransportTypeField = value;
                    this.RaisePropertyChanged("TransportType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string md5 {
            get {
                return this.md5Field;
            }
            set {
                if ((object.ReferenceEquals(this.md5Field, value) != true)) {
                    this.md5Field = value;
                    this.RaisePropertyChanged("md5");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Person", Namespace="http://schemas.datacontract.org/2004/07/TeamProfit")]
    [System.SerializableAttribute()]
    public partial class Person : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountAtRiskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BirthPlaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfBirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpirationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FIOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FIOLatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuranceCompanyCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InsuredAccidentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime InsuredCloseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal InsuredPaymentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassportField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PolicyNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PremCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SexCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string md5Field;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AmountAtRisk {
            get {
                return this.AmountAtRiskField;
            }
            set {
                if ((this.AmountAtRiskField.Equals(value) != true)) {
                    this.AmountAtRiskField = value;
                    this.RaisePropertyChanged("AmountAtRisk");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BirthPlace {
            get {
                return this.BirthPlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.BirthPlaceField, value) != true)) {
                    this.BirthPlaceField = value;
                    this.RaisePropertyChanged("BirthPlace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfBirth {
            get {
                return this.DateOfBirthField;
            }
            set {
                if ((this.DateOfBirthField.Equals(value) != true)) {
                    this.DateOfBirthField = value;
                    this.RaisePropertyChanged("DateOfBirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpirationDate {
            get {
                return this.ExpirationDateField;
            }
            set {
                if ((this.ExpirationDateField.Equals(value) != true)) {
                    this.ExpirationDateField = value;
                    this.RaisePropertyChanged("ExpirationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FIO {
            get {
                return this.FIOField;
            }
            set {
                if ((object.ReferenceEquals(this.FIOField, value) != true)) {
                    this.FIOField = value;
                    this.RaisePropertyChanged("FIO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FIOLat {
            get {
                return this.FIOLatField;
            }
            set {
                if ((object.ReferenceEquals(this.FIOLatField, value) != true)) {
                    this.FIOLatField = value;
                    this.RaisePropertyChanged("FIOLat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsuranceCompanyCode {
            get {
                return this.InsuranceCompanyCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuranceCompanyCodeField, value) != true)) {
                    this.InsuranceCompanyCodeField = value;
                    this.RaisePropertyChanged("InsuranceCompanyCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InsuredAccident {
            get {
                return this.InsuredAccidentField;
            }
            set {
                if ((object.ReferenceEquals(this.InsuredAccidentField, value) != true)) {
                    this.InsuredAccidentField = value;
                    this.RaisePropertyChanged("InsuredAccident");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime InsuredCloseDate {
            get {
                return this.InsuredCloseDateField;
            }
            set {
                if ((this.InsuredCloseDateField.Equals(value) != true)) {
                    this.InsuredCloseDateField = value;
                    this.RaisePropertyChanged("InsuredCloseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal InsuredPayment {
            get {
                return this.InsuredPaymentField;
            }
            set {
                if ((this.InsuredPaymentField.Equals(value) != true)) {
                    this.InsuredPaymentField = value;
                    this.RaisePropertyChanged("InsuredPayment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Passport {
            get {
                return this.PassportField;
            }
            set {
                if ((object.ReferenceEquals(this.PassportField, value) != true)) {
                    this.PassportField = value;
                    this.RaisePropertyChanged("Passport");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonOrder {
            get {
                return this.PersonOrderField;
            }
            set {
                if ((this.PersonOrderField.Equals(value) != true)) {
                    this.PersonOrderField = value;
                    this.RaisePropertyChanged("PersonOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PolicyNumber {
            get {
                return this.PolicyNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PolicyNumberField, value) != true)) {
                    this.PolicyNumberField = value;
                    this.RaisePropertyChanged("PolicyNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PremCurrency {
            get {
                return this.PremCurrencyField;
            }
            set {
                if ((this.PremCurrencyField.Equals(value) != true)) {
                    this.PremCurrencyField = value;
                    this.RaisePropertyChanged("PremCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SexCode {
            get {
                return this.SexCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SexCodeField, value) != true)) {
                    this.SexCodeField = value;
                    this.RaisePropertyChanged("SexCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string md5 {
            get {
                return this.md5Field;
            }
            set {
                if ((object.ReferenceEquals(this.md5Field, value) != true)) {
                    this.md5Field = value;
                    this.RaisePropertyChanged("md5");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TranTask", Namespace="http://schemas.datacontract.org/2004/07/TeamProfit")]
    [System.SerializableAttribute()]
    public partial class TranTask : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaskOptField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupNumber {
            get {
                return this.GroupNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNumberField, value) != true)) {
                    this.GroupNumberField = value;
                    this.RaisePropertyChanged("GroupNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaskOpt {
            get {
                return this.TaskOptField;
            }
            set {
                if ((object.ReferenceEquals(this.TaskOptField, value) != true)) {
                    this.TaskOptField = value;
                    this.RaisePropertyChanged("TaskOpt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InsuranceIncident", Namespace="http://schemas.datacontract.org/2004/07/TeamProfit")]
    [System.SerializableAttribute()]
    public partial class InsuranceIncident : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ChangesDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangesTypeField;
        
        private System.DateTime DateIncidentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateOfExchangeRateField;
        
        private System.DateTime DateSettlmentField;
        
        private System.DateTime DateVisitField;
        
        private string DescriptionField;
        
        private string DiseaseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ExchangeRate_RMB_EURField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double ExchangeRate_RMB_USDField;
        
        private string FileNoField;
        
        private double InsuranceFeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InsuranceFeeCNYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double InsuranceFeeUSDField;
        
        private string Md5HashField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MemberGroupIDField;
        
        private string PlaceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ChangesDate {
            get {
                return this.ChangesDateField;
            }
            set {
                if ((this.ChangesDateField.Equals(value) != true)) {
                    this.ChangesDateField = value;
                    this.RaisePropertyChanged("ChangesDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangesType {
            get {
                return this.ChangesTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangesTypeField, value) != true)) {
                    this.ChangesTypeField = value;
                    this.RaisePropertyChanged("ChangesType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime DateIncident {
            get {
                return this.DateIncidentField;
            }
            set {
                if ((this.DateIncidentField.Equals(value) != true)) {
                    this.DateIncidentField = value;
                    this.RaisePropertyChanged("DateIncident");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateOfExchangeRate {
            get {
                return this.DateOfExchangeRateField;
            }
            set {
                if ((this.DateOfExchangeRateField.Equals(value) != true)) {
                    this.DateOfExchangeRateField = value;
                    this.RaisePropertyChanged("DateOfExchangeRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime DateSettlment {
            get {
                return this.DateSettlmentField;
            }
            set {
                if ((this.DateSettlmentField.Equals(value) != true)) {
                    this.DateSettlmentField = value;
                    this.RaisePropertyChanged("DateSettlment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime DateVisit {
            get {
                return this.DateVisitField;
            }
            set {
                if ((this.DateVisitField.Equals(value) != true)) {
                    this.DateVisitField = value;
                    this.RaisePropertyChanged("DateVisit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string DiseaseType {
            get {
                return this.DiseaseTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DiseaseTypeField, value) != true)) {
                    this.DiseaseTypeField = value;
                    this.RaisePropertyChanged("DiseaseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ExchangeRate_RMB_EUR {
            get {
                return this.ExchangeRate_RMB_EURField;
            }
            set {
                if ((this.ExchangeRate_RMB_EURField.Equals(value) != true)) {
                    this.ExchangeRate_RMB_EURField = value;
                    this.RaisePropertyChanged("ExchangeRate_RMB_EUR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double ExchangeRate_RMB_USD {
            get {
                return this.ExchangeRate_RMB_USDField;
            }
            set {
                if ((this.ExchangeRate_RMB_USDField.Equals(value) != true)) {
                    this.ExchangeRate_RMB_USDField = value;
                    this.RaisePropertyChanged("ExchangeRate_RMB_USD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string FileNo {
            get {
                return this.FileNoField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNoField, value) != true)) {
                    this.FileNoField = value;
                    this.RaisePropertyChanged("FileNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public double InsuranceFee {
            get {
                return this.InsuranceFeeField;
            }
            set {
                if ((this.InsuranceFeeField.Equals(value) != true)) {
                    this.InsuranceFeeField = value;
                    this.RaisePropertyChanged("InsuranceFee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InsuranceFeeCNY {
            get {
                return this.InsuranceFeeCNYField;
            }
            set {
                if ((this.InsuranceFeeCNYField.Equals(value) != true)) {
                    this.InsuranceFeeCNYField = value;
                    this.RaisePropertyChanged("InsuranceFeeCNY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double InsuranceFeeUSD {
            get {
                return this.InsuranceFeeUSDField;
            }
            set {
                if ((this.InsuranceFeeUSDField.Equals(value) != true)) {
                    this.InsuranceFeeUSDField = value;
                    this.RaisePropertyChanged("InsuranceFeeUSD");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Md5Hash {
            get {
                return this.Md5HashField;
            }
            set {
                if ((object.ReferenceEquals(this.Md5HashField, value) != true)) {
                    this.Md5HashField = value;
                    this.RaisePropertyChanged("Md5Hash");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MemberGroupID {
            get {
                return this.MemberGroupIDField;
            }
            set {
                if ((object.ReferenceEquals(this.MemberGroupIDField, value) != true)) {
                    this.MemberGroupIDField = value;
                    this.RaisePropertyChanged("MemberGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Place {
            get {
                return this.PlaceField;
            }
            set {
                if ((object.ReferenceEquals(this.PlaceField, value) != true)) {
                    this.PlaceField = value;
                    this.RaisePropertyChanged("Place");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceTeamProfit.Service")]
    public interface Service {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service/AddPolicy", ReplyAction="http://tempuri.org/Service/AddPolicyResponse")]
        string AddPolicy(
                    string password, 
                    string PolicyNumber, 
                    System.DateTime PolicyPeriodFrom, 
                    System.DateTime PolicyPeriodTill, 
                    int PolicyTerm, 
                    System.DateTime DtCreated, 
                    string TransportType, 
                    decimal AmountAtRisk, 
                    decimal PremCurrency, 
                    string FIO, 
                    string Passport, 
                    System.Nullable<System.DateTime> DateOfBirth, 
                    string SexCode, 
                    string BirthPlace, 
                    System.Nullable<System.DateTime> ExpirationDate, 
                    string GroupNumber, 
                    string SentTravelAgencies, 
                    string ReceiveTravelAgencies, 
                    string Description, 
                    string PointOfEntryAirport, 
                    string ItemDepartureAirport, 
                    System.DateTime DateArrival, 
                    System.DateTime DateDeparture, 
                    string SendingOperator, 
                    string CoordinationAuthority, 
                    string NameGroupLeader, 
                    int NumberPeopleGroup, 
                    int PersonOrder, 
                    string Md5Hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service/AddPolicy", ReplyAction="http://tempuri.org/Service/AddPolicyResponse")]
        System.Threading.Tasks.Task<string> AddPolicyAsync(
                    string password, 
                    string PolicyNumber, 
                    System.DateTime PolicyPeriodFrom, 
                    System.DateTime PolicyPeriodTill, 
                    int PolicyTerm, 
                    System.DateTime DtCreated, 
                    string TransportType, 
                    decimal AmountAtRisk, 
                    decimal PremCurrency, 
                    string FIO, 
                    string Passport, 
                    System.Nullable<System.DateTime> DateOfBirth, 
                    string SexCode, 
                    string BirthPlace, 
                    System.Nullable<System.DateTime> ExpirationDate, 
                    string GroupNumber, 
                    string SentTravelAgencies, 
                    string ReceiveTravelAgencies, 
                    string Description, 
                    string PointOfEntryAirport, 
                    string ItemDepartureAirport, 
                    System.DateTime DateArrival, 
                    System.DateTime DateDeparture, 
                    string SendingOperator, 
                    string CoordinationAuthority, 
                    string NameGroupLeader, 
                    int NumberPeopleGroup, 
                    int PersonOrder, 
                    string Md5Hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service/AddPolicyDirection", ReplyAction="http://tempuri.org/Service/AddPolicyDirectionResponse")]
        string AddPolicyDirection(
                    string password, 
                    string PolicyNumber, 
                    System.DateTime PolicyPeriodFrom, 
                    System.DateTime PolicyPeriodTill, 
                    int PolicyTerm, 
                    System.DateTime DtCreated, 
                    string TransportType, 
                    decimal AmountAtRisk, 
                    decimal PremCurrency, 
                    string FIO, 
                    string Passport, 
                    System.Nullable<System.DateTime> DateOfBirth, 
                    string SexCode, 
                    string BirthPlace, 
                    System.Nullable<System.DateTime> ExpirationDate, 
                    string GroupNumber, 
                    string SentTravelAgencies, 
                    string ReceiveTravelAgencies, 
                    string Description, 
                    string PointOfEntryAirport, 
                    string ItemDepartureAirport, 
                    System.DateTime DateArrival, 
                    System.DateTime DateDeparture, 
                    string SendingOperator, 
                    string CoordinationAuthority, 
                    string NameGroupLeader, 
                    int NumberPeopleGroup, 
                    int PersonOrder, 
                    string Md5Hash, 
                    string Direction);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/Service/AddPolicyDirection", ReplyAction="http://tempuri.org/Service/AddPolicyDirectionResponse")]
        System.Threading.Tasks.Task<string> AddPolicyDirectionAsync(
                    string password, 
                    string PolicyNumber, 
                    System.DateTime PolicyPeriodFrom, 
                    System.DateTime PolicyPeriodTill, 
                    int PolicyTerm, 
                    System.DateTime DtCreated, 
                    string TransportType, 
                    decimal AmountAtRisk, 
                    decimal PremCurrency, 
                    string FIO, 
                    string Passport, 
                    System.Nullable<System.DateTime> DateOfBirth, 
                    string SexCode, 
                    string BirthPlace, 
                    System.Nullable<System.DateTime> ExpirationDate, 
                    string GroupNumber, 
                    string SentTravelAgencies, 
                    string ReceiveTravelAgencies, 
                    string Description, 
                    string PointOfEntryAirport, 
                    string ItemDepartureAirport, 
                    System.DateTime DateArrival, 
                    System.DateTime DateDeparture, 
                    string SendingOperator, 
                    string CoordinationAuthority, 
                    string NameGroupLeader, 
                    int NumberPeopleGroup, 
                    int PersonOrder, 
                    string Md5Hash, 
                    string Direction);
        
        [System.ServiceModel.OperationContractAttribute(Action="DeleteGroup", ReplyAction="DeleteGroup")]
        string DeleteGroup(string password, string GroupNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="DeleteGroup", ReplyAction="DeleteGroup")]
        System.Threading.Tasks.Task<string> DeleteGroupAsync(string password, string GroupNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="DeleteGroupById", ReplyAction="DeleteGroupById")]
        string DeleteGroupById(string password, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="DeleteGroupById", ReplyAction="DeleteGroupById")]
        System.Threading.Tasks.Task<string> DeleteGroupByIdAsync(string password, int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="IsGroup", ReplyAction="IsGroup")]
        int IsGroup(string password, string GroupNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="IsGroup", ReplyAction="IsGroup")]
        System.Threading.Tasks.Task<int> IsGroupAsync(string password, string GroupNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="ValidGroup", ReplyAction="ValidGroup")]
        string ValidGroup(string password, string GroupNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="ValidGroup", ReplyAction="ValidGroup")]
        System.Threading.Tasks.Task<string> ValidGroupAsync(string password, string GroupNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="UpdateGroup", ReplyAction="UpdateGroup")]
        string UpdateGroup(string password, string GroupNumber, string FIO, string Passport, System.DateTime DateOfBirth, string ChangeType, string ChangeValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="UpdateGroup", ReplyAction="UpdateGroup")]
        System.Threading.Tasks.Task<string> UpdateGroupAsync(string password, string GroupNumber, string FIO, string Passport, System.DateTime DateOfBirth, string ChangeType, string ChangeValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetGroupValidationList", ReplyAction="GetGroupValidationList")]
        gTravel.ServiceTeamProfit.GroupCheckResult[] GetGroupValidationList(string password, System.DateTime fromDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetGroupValidationList", ReplyAction="GetGroupValidationList")]
        System.Threading.Tasks.Task<gTravel.ServiceTeamProfit.GroupCheckResult[]> GetGroupValidationListAsync(string password, System.DateTime fromDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCAList", ReplyAction="GetCAList")]
        gTravel.ServiceTeamProfit.CoordinationAuthority[] GetCAList(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCAList", ReplyAction="GetCAList")]
        System.Threading.Tasks.Task<gTravel.ServiceTeamProfit.CoordinationAuthority[]> GetCAListAsync(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCheckPointList", ReplyAction="GetCheckPointList")]
        gTravel.ServiceTeamProfit.CheckPoint[] GetCheckPointList(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetCheckPointList", ReplyAction="GetCheckPointList")]
        System.Threading.Tasks.Task<gTravel.ServiceTeamProfit.CheckPoint[]> GetCheckPointListAsync(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetTravelAgencyList", ReplyAction="GetTravelAgencyList")]
        gTravel.ServiceTeamProfit.TravelAgency[] GetTravelAgencyList(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetTravelAgencyList", ReplyAction="GetTravelAgencyList")]
        System.Threading.Tasks.Task<gTravel.ServiceTeamProfit.TravelAgency[]> GetTravelAgencyListAsync(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetGroupInfoByPeriod", ReplyAction="GetGroupInfoByPeriod")]
        gTravel.ServiceTeamProfit.Group[] GetGroupInfoByPeriod(string password, System.DateTime fromDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetGroupInfoByPeriod", ReplyAction="GetGroupInfoByPeriod")]
        System.Threading.Tasks.Task<gTravel.ServiceTeamProfit.Group[]> GetGroupInfoByPeriodAsync(string password, System.DateTime fromDate, System.DateTime toDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="AddGroupObject", ReplyAction="AddGroupObject")]
        string[] AddGroupObject(string password, gTravel.ServiceTeamProfit.Group[] GroupObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="AddGroupObject", ReplyAction="AddGroupObject")]
        System.Threading.Tasks.Task<string[]> AddGroupObjectAsync(string password, gTravel.ServiceTeamProfit.Group[] GroupObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetTranTask", ReplyAction="GetTranTask")]
        gTravel.ServiceTeamProfit.TranTask[] GetTranTask(string password, int StartID, int EndID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetTranTask", ReplyAction="GetTranTask")]
        System.Threading.Tasks.Task<gTravel.ServiceTeamProfit.TranTask[]> GetTranTaskAsync(string password, int StartID, int EndID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetTranTaskByCount", ReplyAction="GetTranTaskByCount")]
        gTravel.ServiceTeamProfit.TranTask[] GetTranTaskByCount(string password, int StartID, int Count);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetTranTaskByCount", ReplyAction="GetTranTaskByCount")]
        System.Threading.Tasks.Task<gTravel.ServiceTeamProfit.TranTask[]> GetTranTaskByCountAsync(string password, int StartID, int Count);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetGroupInfoByID", ReplyAction="GetGroupInfoByID")]
        gTravel.ServiceTeamProfit.Group GetGroupInfoByID(string password, int GroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="GetGroupInfoByID", ReplyAction="GetGroupInfoByID")]
        System.Threading.Tasks.Task<gTravel.ServiceTeamProfit.Group> GetGroupInfoByIDAsync(string password, int GroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="AddInsuranceIncident", ReplyAction="InsuranceIncident")]
        string[] AddInsuranceIncident(string password, gTravel.ServiceTeamProfit.InsuranceIncident[] insuranceIncidents);
        
        [System.ServiceModel.OperationContractAttribute(Action="AddInsuranceIncident", ReplyAction="InsuranceIncident")]
        System.Threading.Tasks.Task<string[]> AddInsuranceIncidentAsync(string password, gTravel.ServiceTeamProfit.InsuranceIncident[] insuranceIncidents);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ServiceChannel : gTravel.ServiceTeamProfit.Service, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<gTravel.ServiceTeamProfit.Service>, gTravel.ServiceTeamProfit.Service {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string AddPolicy(
                    string password, 
                    string PolicyNumber, 
                    System.DateTime PolicyPeriodFrom, 
                    System.DateTime PolicyPeriodTill, 
                    int PolicyTerm, 
                    System.DateTime DtCreated, 
                    string TransportType, 
                    decimal AmountAtRisk, 
                    decimal PremCurrency, 
                    string FIO, 
                    string Passport, 
                    System.Nullable<System.DateTime> DateOfBirth, 
                    string SexCode, 
                    string BirthPlace, 
                    System.Nullable<System.DateTime> ExpirationDate, 
                    string GroupNumber, 
                    string SentTravelAgencies, 
                    string ReceiveTravelAgencies, 
                    string Description, 
                    string PointOfEntryAirport, 
                    string ItemDepartureAirport, 
                    System.DateTime DateArrival, 
                    System.DateTime DateDeparture, 
                    string SendingOperator, 
                    string CoordinationAuthority, 
                    string NameGroupLeader, 
                    int NumberPeopleGroup, 
                    int PersonOrder, 
                    string Md5Hash) {
            return base.Channel.AddPolicy(password, PolicyNumber, PolicyPeriodFrom, PolicyPeriodTill, PolicyTerm, DtCreated, TransportType, AmountAtRisk, PremCurrency, FIO, Passport, DateOfBirth, SexCode, BirthPlace, ExpirationDate, GroupNumber, SentTravelAgencies, ReceiveTravelAgencies, Description, PointOfEntryAirport, ItemDepartureAirport, DateArrival, DateDeparture, SendingOperator, CoordinationAuthority, NameGroupLeader, NumberPeopleGroup, PersonOrder, Md5Hash);
        }
        
        public System.Threading.Tasks.Task<string> AddPolicyAsync(
                    string password, 
                    string PolicyNumber, 
                    System.DateTime PolicyPeriodFrom, 
                    System.DateTime PolicyPeriodTill, 
                    int PolicyTerm, 
                    System.DateTime DtCreated, 
                    string TransportType, 
                    decimal AmountAtRisk, 
                    decimal PremCurrency, 
                    string FIO, 
                    string Passport, 
                    System.Nullable<System.DateTime> DateOfBirth, 
                    string SexCode, 
                    string BirthPlace, 
                    System.Nullable<System.DateTime> ExpirationDate, 
                    string GroupNumber, 
                    string SentTravelAgencies, 
                    string ReceiveTravelAgencies, 
                    string Description, 
                    string PointOfEntryAirport, 
                    string ItemDepartureAirport, 
                    System.DateTime DateArrival, 
                    System.DateTime DateDeparture, 
                    string SendingOperator, 
                    string CoordinationAuthority, 
                    string NameGroupLeader, 
                    int NumberPeopleGroup, 
                    int PersonOrder, 
                    string Md5Hash) {
            return base.Channel.AddPolicyAsync(password, PolicyNumber, PolicyPeriodFrom, PolicyPeriodTill, PolicyTerm, DtCreated, TransportType, AmountAtRisk, PremCurrency, FIO, Passport, DateOfBirth, SexCode, BirthPlace, ExpirationDate, GroupNumber, SentTravelAgencies, ReceiveTravelAgencies, Description, PointOfEntryAirport, ItemDepartureAirport, DateArrival, DateDeparture, SendingOperator, CoordinationAuthority, NameGroupLeader, NumberPeopleGroup, PersonOrder, Md5Hash);
        }
        
        public string AddPolicyDirection(
                    string password, 
                    string PolicyNumber, 
                    System.DateTime PolicyPeriodFrom, 
                    System.DateTime PolicyPeriodTill, 
                    int PolicyTerm, 
                    System.DateTime DtCreated, 
                    string TransportType, 
                    decimal AmountAtRisk, 
                    decimal PremCurrency, 
                    string FIO, 
                    string Passport, 
                    System.Nullable<System.DateTime> DateOfBirth, 
                    string SexCode, 
                    string BirthPlace, 
                    System.Nullable<System.DateTime> ExpirationDate, 
                    string GroupNumber, 
                    string SentTravelAgencies, 
                    string ReceiveTravelAgencies, 
                    string Description, 
                    string PointOfEntryAirport, 
                    string ItemDepartureAirport, 
                    System.DateTime DateArrival, 
                    System.DateTime DateDeparture, 
                    string SendingOperator, 
                    string CoordinationAuthority, 
                    string NameGroupLeader, 
                    int NumberPeopleGroup, 
                    int PersonOrder, 
                    string Md5Hash, 
                    string Direction) {
            return base.Channel.AddPolicyDirection(password, PolicyNumber, PolicyPeriodFrom, PolicyPeriodTill, PolicyTerm, DtCreated, TransportType, AmountAtRisk, PremCurrency, FIO, Passport, DateOfBirth, SexCode, BirthPlace, ExpirationDate, GroupNumber, SentTravelAgencies, ReceiveTravelAgencies, Description, PointOfEntryAirport, ItemDepartureAirport, DateArrival, DateDeparture, SendingOperator, CoordinationAuthority, NameGroupLeader, NumberPeopleGroup, PersonOrder, Md5Hash, Direction);
        }
        
        public System.Threading.Tasks.Task<string> AddPolicyDirectionAsync(
                    string password, 
                    string PolicyNumber, 
                    System.DateTime PolicyPeriodFrom, 
                    System.DateTime PolicyPeriodTill, 
                    int PolicyTerm, 
                    System.DateTime DtCreated, 
                    string TransportType, 
                    decimal AmountAtRisk, 
                    decimal PremCurrency, 
                    string FIO, 
                    string Passport, 
                    System.Nullable<System.DateTime> DateOfBirth, 
                    string SexCode, 
                    string BirthPlace, 
                    System.Nullable<System.DateTime> ExpirationDate, 
                    string GroupNumber, 
                    string SentTravelAgencies, 
                    string ReceiveTravelAgencies, 
                    string Description, 
                    string PointOfEntryAirport, 
                    string ItemDepartureAirport, 
                    System.DateTime DateArrival, 
                    System.DateTime DateDeparture, 
                    string SendingOperator, 
                    string CoordinationAuthority, 
                    string NameGroupLeader, 
                    int NumberPeopleGroup, 
                    int PersonOrder, 
                    string Md5Hash, 
                    string Direction) {
            return base.Channel.AddPolicyDirectionAsync(password, PolicyNumber, PolicyPeriodFrom, PolicyPeriodTill, PolicyTerm, DtCreated, TransportType, AmountAtRisk, PremCurrency, FIO, Passport, DateOfBirth, SexCode, BirthPlace, ExpirationDate, GroupNumber, SentTravelAgencies, ReceiveTravelAgencies, Description, PointOfEntryAirport, ItemDepartureAirport, DateArrival, DateDeparture, SendingOperator, CoordinationAuthority, NameGroupLeader, NumberPeopleGroup, PersonOrder, Md5Hash, Direction);
        }
        
        public string DeleteGroup(string password, string GroupNumber) {
            return base.Channel.DeleteGroup(password, GroupNumber);
        }
        
        public System.Threading.Tasks.Task<string> DeleteGroupAsync(string password, string GroupNumber) {
            return base.Channel.DeleteGroupAsync(password, GroupNumber);
        }
        
        public string DeleteGroupById(string password, int id) {
            return base.Channel.DeleteGroupById(password, id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteGroupByIdAsync(string password, int id) {
            return base.Channel.DeleteGroupByIdAsync(password, id);
        }
        
        public int IsGroup(string password, string GroupNumber) {
            return base.Channel.IsGroup(password, GroupNumber);
        }
        
        public System.Threading.Tasks.Task<int> IsGroupAsync(string password, string GroupNumber) {
            return base.Channel.IsGroupAsync(password, GroupNumber);
        }
        
        public string ValidGroup(string password, string GroupNumber) {
            return base.Channel.ValidGroup(password, GroupNumber);
        }
        
        public System.Threading.Tasks.Task<string> ValidGroupAsync(string password, string GroupNumber) {
            return base.Channel.ValidGroupAsync(password, GroupNumber);
        }
        
        public string UpdateGroup(string password, string GroupNumber, string FIO, string Passport, System.DateTime DateOfBirth, string ChangeType, string ChangeValue) {
            return base.Channel.UpdateGroup(password, GroupNumber, FIO, Passport, DateOfBirth, ChangeType, ChangeValue);
        }
        
        public System.Threading.Tasks.Task<string> UpdateGroupAsync(string password, string GroupNumber, string FIO, string Passport, System.DateTime DateOfBirth, string ChangeType, string ChangeValue) {
            return base.Channel.UpdateGroupAsync(password, GroupNumber, FIO, Passport, DateOfBirth, ChangeType, ChangeValue);
        }
        
        public gTravel.ServiceTeamProfit.GroupCheckResult[] GetGroupValidationList(string password, System.DateTime fromDate, System.DateTime toDate) {
            return base.Channel.GetGroupValidationList(password, fromDate, toDate);
        }
        
        public System.Threading.Tasks.Task<gTravel.ServiceTeamProfit.GroupCheckResult[]> GetGroupValidationListAsync(string password, System.DateTime fromDate, System.DateTime toDate) {
            return base.Channel.GetGroupValidationListAsync(password, fromDate, toDate);
        }
        
        public gTravel.ServiceTeamProfit.CoordinationAuthority[] GetCAList(string password) {
            return base.Channel.GetCAList(password);
        }
        
        public System.Threading.Tasks.Task<gTravel.ServiceTeamProfit.CoordinationAuthority[]> GetCAListAsync(string password) {
            return base.Channel.GetCAListAsync(password);
        }
        
        public gTravel.ServiceTeamProfit.CheckPoint[] GetCheckPointList(string password) {
            return base.Channel.GetCheckPointList(password);
        }
        
        public System.Threading.Tasks.Task<gTravel.ServiceTeamProfit.CheckPoint[]> GetCheckPointListAsync(string password) {
            return base.Channel.GetCheckPointListAsync(password);
        }
        
        public gTravel.ServiceTeamProfit.TravelAgency[] GetTravelAgencyList(string password) {
            return base.Channel.GetTravelAgencyList(password);
        }
        
        public System.Threading.Tasks.Task<gTravel.ServiceTeamProfit.TravelAgency[]> GetTravelAgencyListAsync(string password) {
            return base.Channel.GetTravelAgencyListAsync(password);
        }
        
        public gTravel.ServiceTeamProfit.Group[] GetGroupInfoByPeriod(string password, System.DateTime fromDate, System.DateTime toDate) {
            return base.Channel.GetGroupInfoByPeriod(password, fromDate, toDate);
        }
        
        public System.Threading.Tasks.Task<gTravel.ServiceTeamProfit.Group[]> GetGroupInfoByPeriodAsync(string password, System.DateTime fromDate, System.DateTime toDate) {
            return base.Channel.GetGroupInfoByPeriodAsync(password, fromDate, toDate);
        }
        
        public string[] AddGroupObject(string password, gTravel.ServiceTeamProfit.Group[] GroupObject) {
            return base.Channel.AddGroupObject(password, GroupObject);
        }
        
        public System.Threading.Tasks.Task<string[]> AddGroupObjectAsync(string password, gTravel.ServiceTeamProfit.Group[] GroupObject) {
            return base.Channel.AddGroupObjectAsync(password, GroupObject);
        }
        
        public gTravel.ServiceTeamProfit.TranTask[] GetTranTask(string password, int StartID, int EndID) {
            return base.Channel.GetTranTask(password, StartID, EndID);
        }
        
        public System.Threading.Tasks.Task<gTravel.ServiceTeamProfit.TranTask[]> GetTranTaskAsync(string password, int StartID, int EndID) {
            return base.Channel.GetTranTaskAsync(password, StartID, EndID);
        }
        
        public gTravel.ServiceTeamProfit.TranTask[] GetTranTaskByCount(string password, int StartID, int Count) {
            return base.Channel.GetTranTaskByCount(password, StartID, Count);
        }
        
        public System.Threading.Tasks.Task<gTravel.ServiceTeamProfit.TranTask[]> GetTranTaskByCountAsync(string password, int StartID, int Count) {
            return base.Channel.GetTranTaskByCountAsync(password, StartID, Count);
        }
        
        public gTravel.ServiceTeamProfit.Group GetGroupInfoByID(string password, int GroupID) {
            return base.Channel.GetGroupInfoByID(password, GroupID);
        }
        
        public System.Threading.Tasks.Task<gTravel.ServiceTeamProfit.Group> GetGroupInfoByIDAsync(string password, int GroupID) {
            return base.Channel.GetGroupInfoByIDAsync(password, GroupID);
        }
        
        public string[] AddInsuranceIncident(string password, gTravel.ServiceTeamProfit.InsuranceIncident[] insuranceIncidents) {
            return base.Channel.AddInsuranceIncident(password, insuranceIncidents);
        }
        
        public System.Threading.Tasks.Task<string[]> AddInsuranceIncidentAsync(string password, gTravel.ServiceTeamProfit.InsuranceIncident[] insuranceIncidents) {
            return base.Channel.AddInsuranceIncidentAsync(password, insuranceIncidents);
        }
    }
}
